name: ML Pipeline CI

on:
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
          ref: ${{ github.event.pull_request.head.ref }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest great_expectations pandas scikit-learn flake8 black mypy pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        flake8 day5/homework --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 day5/homework --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Format check with black
      run: |
        black --check day5/homework
        
    - name: Run data tests
      run: |
        pytest day5/homework/tests/test_data.py -v
        
    - name: Run model tests
      id: model_test
      run: |
        pytest day5/homework/tests/test_model.py -v

    - name: Update model
      env:
        USERNAME: github-actions [bot]
        EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      

      run: |
        if [ -f "day5/homework/models/titanic_model_latest.pkl" ]; then
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git config --local user.email "${EMAIL}"
          git config --local user.name "${USERNAME}"
          cd day5/homework/models
          mv titanic_model_latest.pkl titanic_model.pkl
          git add .
          
          if [ "${MODEL_IMPROVED}" = "true" ]; then
            COMMIT_MESSAGE="モデルを更新: 推論時間が ${OLD_MODEL_TIME}秒 から ${NEW_MODEL_TIME}秒 に改善"
          else
            COMMIT_MESSAGE="新しいモデルをコミット"
          fi

          git commit -m "${COMMIT_MESSAGE}" || echo "No changes to commit"
          git push origin HEAD:develop
        fi
